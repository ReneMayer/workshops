* big data


- 64bit & RAM↑. Da R alles in den lokalen Speicher (RAM)  einliest, ist die Größe meiner Datensätze zunächst durch meinen RAM
  begrenzt. Und im Gegensatz zu 32-bit-Systemen, können 64-Bit-Systeme
  riesige Mengen an RAM verwalten. Also: 64bit & RAM↑. Was passiert aber wenn ich eine Situation habe, in der 'Data > RAM' gilt.

** Eine Übersicht zu den Möglichkeiten in R findet sich auf
- CRAN Task View: High-Performance and Parallel Computing with R

** packages & Lösungen

*** virtueller Speicher (hard drive chaching, swapping)
- ff & ffbase
   - liest nur nötiges in den RAM (wie SAS)
   - bspw. 40GB virtuellen Speicher (hard-drive caching) anfordern
     'memory.limit(size=40000)'
   - dank 'ffbase' kann 'ff' viele Operatoren des base Package. Auch
     ein apply ist möglich! ffdfplyr
- bigmemory #  biganalytics::bigglm() ... pointer to a C++ matrix,
  data-types C-like specifications
- data.table
   - read.table für grosse Daten oft zu langsam. 'fread' aus
     'data.table' löst dieses Problem.


*** Data-Warehousing: Die Daten werden auf einer Serverfarm gespeichert
- RStudio Server. Vorteile: versteht
  R-code: dplyr - select, filter u.s.w.; im Hintergrund wird der
  dplyr-Code in SQL übersetzt.
- hadoop-framework.
  - RHadoop, rmr, ...
- sparkR
- PivotalR

*** Drittanbieter
- Relolution Analytics: RevoScaleR

* logs, logging

** savehistory()
- in der Datei .Rprofile folgenden Codeschnipsel einfügen
- speichert alle verwendeten Befehle
.Last = function() {
    if (interactive()) try(savehistory("~/.Rhistory"))
}

sink() # speichert alle erzeugten Objekte

** spezielle packages für logs
- track https://cran.r-project.org/web/packages/track/index.html
- logging

** R's Batch Modus verwenden; ähnlich stata log
- R kann im so genannten Batch-Modus betrieben werden: Eine
  (Windows-)Konsole wird geöffnet und ein R-Script wird von dort
  ausgeführt.

- Bsp. MS Win (passen Sie gegebenenfalls den Pfad von R.exe an)
"C:\Program Files\R\R-2.13.1\bin\R.exe" CMD BATCH --vanilla --slave "c:\my projects\my_script.R"

** Markdown
In RStudio benennen Sie Ihre *.R-Datei in *.Rmd um. Beginnen Sie den gesamten
R-Code mit drei führende Gegenapostrophen und Beenden Sie den gesamten
R-code mit drei endenden Gegenapostrophen.

#+BEGIN_EXAMPLE

    ```{r}
    # r-code
    # ...
    ```
#+END_EXAMPLE

Dann drücken sie auf das Symbol mit der Wolle/Stricknadel und wählen
'html', 'doc' oder 'pdf'. Es kann auch eine reine txt-datei erzeugt
werden.


